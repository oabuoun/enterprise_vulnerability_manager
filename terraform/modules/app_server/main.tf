# App Server
resource "aws_instance" "cyber94_vulnerability_scanner_app"{
  ami = "ami-0943382e114f188e8"
  instance_type = "t2.micro"
  key_name = var.var_ssh_key_name
  count = 2
  associate_public_ip_address = true
  subnet_id = var.var_app_subnet_id

  vpc_security_group_ids = [aws_security_group.cyber94_vulnerability_scanner_sg_app_tf.id]

  user_data = templatefile("../init-scripts/docker-install.sh", {SPECIAL_ARG="This is an argument from terraform"})
  
  tags = {
    Name = "cyber94_vulnerability_scanner_app_${count.index}"
  }

  # lifecycle {
  #   create_before_destroy = true
  # }
  connection {
    type = "ssh"
    user = "ubuntu"
    host = self.public_ip
    private_key = file("/home/kali/.ssh/cyber94-bdeadfield.pem")
  }

#   provisioner "remote-exec"{
#     inline = [
#       "pwd"
#     ]
#   }
}

# App Security Group
resource "aws_security_group" "cyber94_vulnerability_scanner_sg_app_tf"{
  name = "cyber94_vulnerability_scanner_sg_app"
  description = "Allow Web inbound traffic"
  vpc_id = var.var_aws_vpc_id

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "5000"
    from_port   = 5000
    to_port     = 5000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "HTTPS"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "HTTP"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
