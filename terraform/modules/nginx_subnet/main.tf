# @component TerraformAWS:VPC:NACl_Proxy:Subnet_Proxy (#subnet_proxy)
# Nginx Subnet
resource "aws_subnet" "cyber94_vulnerability_scanner_subnet_nginx_tf"{
  vpc_id = var.var_aws_vpc_id
  cidr_block = "10.118.4.0/24"

  tags = {
    Name = "cyber94_vulnerability_scanner_subnet_nginx"
  }
}

# @connects #rt to #subnet_proxy with link
# @connects #subnet_proxy to #rt with link
# Nginx Route Table Association
resource "aws_route_table_association" "cyber94_vulnerability_scanner_rt_assoc_nginx_tf" {
    subnet_id = aws_subnet.cyber94_vulnerability_scanner_subnet_nginx_tf.id
    route_table_id = var.var_internet_rt
}

# @component TerraformAWS:VPC:NACl_Proxy (#nacl_proxy)
# @connects #nacl_proxy to #subnet_proxy with SSH,HTTPs,Ephemeral Ports
# @connects #subnet_proxy to #nacl_proxy with HTTP,HTTPs,Ephemeral Ports
# @connects #nacl_proxy to #nacl_app with HTTP,HTTPs
# @connects #nacl_app to #nacl_proxy with HTTP,HTTPs
# Nginx Network Access Control List
resource "aws_network_acl" "cyber94_vulnerability_scanner_ncal_nginx_tf"{
  vpc_id = var.var_aws_vpc_id

  egress {
      protocol   = "-1"
      rule_no    = 100
      action     = "allow"
      cidr_block = "0.0.0.0/0"
      from_port  = 0
      to_port    = 0
    }
  egress {
      protocol   = "-1"
      rule_no    = 200
      action     = "deny"
      cidr_block = "0.0.0.0/0"
      from_port  = 0
      to_port    = 0
    }
  ingress {
      protocol   = "-1"
      rule_no    = 100
      action     = "allow"
      cidr_block = "0.0.0.0/0"
      from_port  = 0
      to_port    = 0
    }
  ingress {
      protocol   = "-1"
      rule_no    = 200
      action     = "deny"
      cidr_block = "0.0.0.0/0"
      from_port  = 0
      to_port    = 0
    }

  subnet_ids = [aws_subnet.cyber94_vulnerability_scanner_subnet_nginx_tf.id]

  tags = {
    Name = "cyber94_vulnerability_scanner_ncal_nginx"
  }
}
