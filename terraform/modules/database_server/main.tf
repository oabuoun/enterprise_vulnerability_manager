# @component TerraformAWS:VPC:NACl_Database:Subnet_Database:Security_Group_Database:EC2_Instance_Database (#ec2_db)
# @connects #sg_db to #ec2_db with SQL_Querry
# @connects #ec2_db to #sg_db with SQL_Response

# @threat IP exposure (#ipexposure)
# @control NOt connected to public IP address or route table (#privateip)
# @mitigates #ec2_db against #ipexposure with #privateip

# Database Server
resource "aws_instance" "cyber94_vulnerability_scanner_db"{
  ami = "ami-0d1c7c4de1f4cdc9a"
  instance_type = "t2.micro"
  key_name = "cyber94-bdeadfield"
  subnet_id = var.var_db_subnet_id

  vpc_security_group_ids = [aws_security_group.cyber94_vulnerability_scanner_sg_db_tf.id]

  tags = {
    Name = "cyber94_vulnerability_scanner_db"
  }

  lifecycle {
    create_before_destroy = true
  }
}

# @component TerraformAWS:VPC:NACl_Database:Subnet_Database:Security_Group_Database (#sg_db)
# @connects #subnet_db to #sg_db with SQL
# @connects #sg_db to #subnet_db with SQL
# Database Security Group
resource "aws_security_group" "cyber94_vulnerability_scanner_sg_db_tf"{
  name = "cyber94_vulnerability_scanner_sg_db"
  description = "Allow Web inbound traffic"
  vpc_id = var.var_aws_vpc_id

  ingress {
    description = "MySQL"
    from_port   = 3306
    to_port     = 3306
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    to_port     = 0
    from_port   = 0
    protocol    = -1
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "cyber94_vulnerability_scanner_sg_db"
  }
}
