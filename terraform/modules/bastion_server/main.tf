# @component TerraformAWS:VPC:NACl_Bastion:Subnet_Bastion:Security_Group_Bastion:EC2_Instance_Bastion (#ec2_bastion)
# @connects #sg_bastion to #ec2_bastion with SSH
# @connects #ec2_bastion to #sg_bastion with HTTP,HTTPs

# @threat intruder SSH connection (#ssh)
# @control NACL and security group IP check (#ip)
# @mitigates #ec2_bastion against #ssh with #ip

# @threat IP exposure (#ipexposure)
# @exposes #ec2_bastion to #ipexposure with not using a DNS server or proxy server

# Bastion Server
resource "aws_instance" "cyber94_vulnerability_scanner_bastion"{
  ami = "ami-0943382e114f188e8"
  instance_type = "t2.micro"
  key_name = "cyber94-bdeadfield"
  associate_public_ip_address = true
  subnet_id = var.var_bastion_subnet_id

  vpc_security_group_ids = [aws_security_group.cyber94_vulnerability_scanner_sg_bastion_tf.id]

  tags = {
    Name = "cyber94_vulnerability_scanner_bastion"
  }

  lifecycle {
    create_before_destroy = true
  }
}

# @component TerraformAWS:VPC:NACl_Bastion:Subnet_Bastion:Security_Group_Bastion (#sg_bastion)
# @connects #subnet_bastion to #sg_bastion with SSH
# @connects #sg_bastion to #subnet_bastion with SSH,HTTP,HTTPs
# Bastion Security Group
resource "aws_security_group" "cyber94_vulnerability_scanner_sg_bastion_tf"{
  name = "cyber94_vulnerability_scanner_sg_bastion"
  description = "Allow Web inbound traffic"
  vpc_id = var.var_aws_vpc_id

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "HTTPS"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "cyber94_vulnerability_scanner_sg_bastion"
  }
}
