



from bs4 import BeautifulSoup
from datetime import datetime
from MySQL import MySQL

import json
import requests

def Unknown_cve_check(url,res):
    cve_id = str(url).split('cve_id=')[1]
    if 'Unknown CVE ID' not in res.text:
        return True
    else:
        return False


def get_response(url):
    try:
        res = requests.get(url)
        return res
    except Exception as e:
        print(e)
        pass


def check_name(name,dict):
    if name in dict['cve_title']:
        return True
    else:
        print(f'No {name}')
        return False

def get_dictionary(res, cve_id):
    soup = BeautifulSoup(res.text, 'html.parser')
    td = [str(x.text).replace('\n', ' ').replace('\t', '').strip() for x in soup.findAll('td')]
    cve_score= str(soup.find('div', {'class': 'cvssbox'}).text).strip()
    cve_title= str(
        soup.find('div', {
            'class': 'cvedetailssummary'
        }).text) \
        .replace('\n', ' ') \
        .replace('\t', '') \
        .strip()
    all_date = str(
        soup.find('span', {
            'class': 'datenote'
        }).text) \
        .replace('\n', ' ') \
        .replace('\t', '') \
        .strip()
    cve_publish_time= all_date[15:25]
    cve_update_date= all_date[44:]
    data = [cve_title,cve_score,cve_update_date]
    return data


def get_update():
    data = dict()
    with open('update_exploits.txt', 'r') as fileupdate:
        update_data = fileupdate.readline()
        last_cve = int(update_data)
        try:
            for year in range(2021, int(datetime.now().year) + 1):
                prefix = 'https://www.cvedetails.com/cve-details.php?cve_id=CVE-' + str(year) + '-{:04n}'
                for i in range(int(update_data) + 1, int(update_data)+250):
                    print(i)
                    url = prefix.format(i)
                    res = get_response(url)
                    if Unknown_cve_check(url,res) == True:

                        cve_id = str(url).split('cve_id=')[1]
                        data_values = get_dictionary(res,cve_id)
                        data[cve_id] = data_values
                        last_cve = i
                    else:
                        print('No cve found with that id')



        except KeyboardInterrupt:
            return False


    with open('update_exploits.txt', 'w') as fileupdate:
        fileupdate.write(str(last_cve))
    return data


def name_check(dict,names):
    checked = {}
    for item in names:
        for key in dict:
            print(key)
            if item in dict[key][0]:
                dict[key].append(item)
                checked[key] = dict[key]
            else:
                print(f'{item} not in {key}')
    if len(checked) == 0:
        return 'No items found'
    else:
        new_records = MySQL.dupe_check(checked)
        return new_records



if __name__ == '__main__':

    check = get_update()
    #print(check)

    product_check = name_check(check,['Linux', 'Replicated'])
    print(product_check)
