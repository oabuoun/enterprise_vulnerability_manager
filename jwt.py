from flask import Flask, make_response, request, render_template, redirect, jsonify
from random import random
import jwt
import datetime

SECRET_KEY  = "E3BE5237385B63455D6EE77359137"
flask_app = Flask(__name__)

def verify_token(token):
    if token:
        decoded_token = jwt.decode(token, SECRET_KEY, "HS256")
        print(decoded_token)
        return True
    else:
        return False

@flask_app.route('/')
def index():
    logged_in = False
    if 'token' in request.cookies:
        logged_in = verify_token(request.cookies['token'])
    if logged_in:
        return 'Welcome Back!'
    else:
        user_id = random()
        print(f"User ID: {user_id}")
        resp = make_response(render_template('index.html'))
        resp.set_cookie('user_id', str(user_id))
        return resp

@flask_app.route('/login')
def login_page():
    return render_template('login.html')

def create_token(username, password):
    validity = datetime.datetime.utcnow() + datetime.timedelta(days=15)
    token = jwt.encode({'user_id': 123154, 'username': username, 'exp': validity}, SECRET_KEY, "HS256" )
    return token

@flask_app.route('/authenticate', methods = ['POST'])
def authenticate_users():
    data = request.form
    username = data['username']
    password = data['password']

    user_token = create_token(username, password)

    resp = make_response(redirect('/users'))
    resp.set_cookie('token', user_token)
    return resp

@flask_app.route('/users', methods = ['GET'])
def users_only():
    logged_in = False
    if 'token' in request.cookies:
        logged_in = verify_token(request.cookies['token'])

    if logged_in:
        return render_template("users.html")
    else:
        resp = make_response(redirect('/login'))
        return resp


if __name__ == '__main__':
    flask_app.run(debug=True, ssl_context=('cert/cert.pem', 'cert/key.pem'))
