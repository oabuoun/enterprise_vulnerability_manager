from flask import Flask, render_template, redirect, request, url_for, session
from flaskext.mysql import MySQL
from mysql.connector import connect, Error
import bcrypt

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/register', methods=["GET", "POST"])
def register():
    if request.method == 'GET':
        return render_template("register.html")
    elif request.method == 'POST':
        name = request.form['name']
        email = request.form['email']
        password = request.form['password'].encode('utf-8')
        hash_password = bcrypt.hashpw(password, bcrypt.gensalt())

        print(hash_password)

        try:
            with connect(
                host="localhost",
                user="root",
                password="my_secret_password",
                database="flask_db",
            ) as connection:
                print(connection)
                # show_db_query = "INSERT INTO users (name,email,password) VALUES ('m', 'mo@gmail.com', '$2b$12$Drvh3ciJXg6MQzrntTwuu.6LfgcgwRdD6knq4gBd4favOc.pb8tO6')"
                show_db_query = "INSERT INTO users (name,email,password) VALUES (%s,%s,%s)"
                query_values = (name,email,hash_password)
                with connection.cursor() as cursor:
                    cursor.execute(show_db_query, query_values)
                    connection.commit()
                    session['name'] = name
                    session['email'] = email
                    return redirect(url_for("home"))
                    # for db in cursor:
                    #     print(db)
        except Error as e:
            print(e)


@app.route('/login', methods=["GET", "POST"])
def login():
    if request.method == "POST":
        email = request.form['email']
        password = request.form['password'].encode('utf-8')

        try:
            with connect(
                host="localhost",
                user="root",
                password="my_secret_password",
                database="flask_db",
            ) as connection:
                print(connection)
                # show_db_query = "INSERT INTO users (name,email,password) VALUES ('m', 'mo@gmail.com', '$2b$12$Drvh3ciJXg6MQzrntTwuu.6LfgcgwRdD6knq4gBd4favOc.pb8tO6')"
                show_db_query = "SELECT * FROM users WHERE email=%s"
                query_values = (email,)
                with connection.cursor() as cursor:
                    cursor.execute(show_db_query, query_values)
                    db_user_result = cursor.fetchone()
                    print('PRINTING USER')

                    print(db_user_result)
                    db_user_name = db_user_result[1]
                    db_user_email = db_user_result[2]
                    db_user_password = db_user_result[3]
                    print(db_user_email)
                    print(db_user_password)
        except Error as e:
            print(e)

        # cursor = mysql.connection.cursor(MySQLdb.cursors.DictCursor)
        # cursor.execute("SELECT * FROM users WHERE email=%s",(email))
        # user = cursor.fetchone()
        # cursor.close()

        if len(db_user_result) > 0:
            # if bcrypt.hashpw(password, user['password'].encode('utf-8')) == user['password'].encode('utf-8'):
            if bcrypt.hashpw(password, db_user_password.encode('utf-8')) == db_user_password.encode('utf-8'):
                session['name'] = db_user_name
                session['email'] = db_user_email
                return render_template("home.html")
            else:
                return "Error, password or user do not match"
        else:
            return "Error, password or user do not match"
    else:
        return render_template("login2.html")
    #return render_template('login.html')

@app.route('/logout')
def logout():
    session.clear()
    return render_template("home.html")

@app.route('/admin')
def admin_index():
    return "This is the Admin Index page"

@app.route('/admin/create_user')
def admin_create_users():
    return "This is an admin priviledge page to create users"

@app.route('/admin/reset_user_password')
def admin_reset_user_passwords():
    return "This is an admin priviledge page to reset users password"

@app.route('/user')
def user_index():
    return "This is the User Index page"

@app.route('/user/vulnerability_scanner')
def user_vulnerability_scanner():
    return "This is the User Vulnerability Scanner page"

if __name__ == '__main__':
    print("This is the web app")
    app.secret_key = "012#!jadfkiGg)(*%$"
    app.run(debug = True, ssl_context = ('cert/cert.pem', 'cert/key.pem'))
