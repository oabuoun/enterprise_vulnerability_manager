from flask import Flask, render_template, redirect, request, url_for, session
from flaskext.mysql import MySQL
import bcrypt

app = Flask(__name__)
app.config['MYSQL_DATABASE_HOST'] = 'localhost'
app.config['MYSQL_DATABASE_PORT'] = 3306
app.config['MYSQL_DATABASE_USER'] = 'root'
app.config['MYSQL_DATABASE_PASSWORD'] = 'my_secret_password'
app.config['MYSQL_DATABASE_DB'] = 'flask_db'
app.config['MYSQL_CURSORCLASS'] = 'DictCursor'
# mysql = MySQL(app)
mysql = MySQL()
mysql.init_app(app)

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/register', methods=["GET", "POST"])
def register():
    if request.method == 'GET':
        return render_template("register.html")
    elif request.method == 'POST':
        name = request.form['name']
        email = request.form['email']
        password = request.form['password'].encode('utf-8')
        hash_password = bcrypt.hashpw(password, bcrypt.gensalt())

        cur = mysql.get_db().cursor()
        cur.execute("INSERT INTO user (name,email,password) VALUES (%s,%s,%s)",(name,email,hash_password))
        mysql.get_db().commit()
        session['name'] = name
        session['email'] = email
        return redirect(url_for("home"))

@app.route('/login')
def login_page():
    return render_template('login.html')

@app.route('/admin')
def admin_index():
    return "This is the Admin Index page"

@app.route('/admin/create_user')
def admin_create_users():
    return "This is an admin priviledge page to create users"

@app.route('/admin/reset_user_password')
def admin_reset_user_passwords():
    return "This is an admin priviledge page to reset users password"

@app.route('/user')
def user_index():
    return "This is the User Index page"

@app.route('/user/vulnerability_scanner')
def user_vulnerability_scanner():
    return "This is the User Vulnerability Scanner page"

if __name__ == '__main__':
    print("This is the web app")
    app.secret_Key = "012#!jadfkiGg)(*%$"
    app.run(debug = True, ssl_context = ('cert/cert.pem', 'cert/key.pem'))
